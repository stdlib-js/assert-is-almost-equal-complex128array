{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isComplex128Array = require( '@stdlib/assert-is-complex128array' );\nvar hasAlmostEqualValues = require( '@stdlib/array-base-assert-has-almost-equal-values' );\n\n\n// MAIN //\n\n/**\n* Tests if two arguments are both Complex128Arrays and contain respective elements which are approximately equal within a specified number of ULPs (units in the last place).\n*\n* ## Notes\n*\n* -   The function returns `false` if either input value is a `Complex128Array` containing `NaN`.\n* -   The function does not distinguish between `-0` and `+0`, treating them as equal.\n*\n* @param {*} v1 - first value\n* @param {*} v2 - second value\n* @param {NonNegativeInteger} maxULP - maximum allowed ULP difference\n* @returns {boolean} boolean indicating whether two arguments are approximately equal\n*\n* @example\n* var Complex128Array = require( '@stdlib/array-complex128' );\n*\n* var x = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n* var y = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n*\n* var out = isAlmostEqualComplex128Array( x, y, 0 );\n* // returns true\n*\n* @example\n* var Complex128Array = require( '@stdlib/array-complex128' );\n*\n* var x = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n* var y = new Complex128Array( [ 1.0, 2.0, 4.0, 4.0 ] );\n*\n* var out = isAlmostEqualComplex128Array( x, y, 1 );\n* // returns false\n*/\nfunction isAlmostEqualComplex128Array( v1, v2, maxULP ) {\n\treturn ( isComplex128Array( v1 ) && isComplex128Array( v2 ) && hasAlmostEqualValues( v1, v2, maxULP ) );  // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAlmostEqualComplex128Array;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments are both Complex128Arrays and contain respective elements which are approximately equal within a specified number of ULPs (units in the last place).\n*\n* @module @stdlib/assert-is-almost-equal-complex128array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array-complex128' );\n* var isAlmostEqualComplex128Array = require( '@stdlib/assert-is-almost-equal-complex128array' );\n*\n* var x = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n* var y = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n*\n* var out = isAlmostEqualComplex128Array( x, y, 0 );\n* // returns true\n*\n* @example\n* var Complex128Array = require( '@stdlib/array-complex128' );\n* var isAlmostEqualComplex128Array = require( '@stdlib/assert-is-almost-equal-complex128array' );\n*\n* var x = new Complex128Array( [ 1.0, 2.0, 3.0, 4.0 ] );\n* var y = new Complex128Array( [ 1.0, 2.0, 4.0, 4.0 ] );\n*\n* var out = isAlmostEqualComplex128Array( x, y, 1 );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,mCAAoC,EACjEC,EAAuB,QAAS,mDAAoD,EAoCxF,SAASC,EAA8BC,EAAIC,EAAIC,EAAS,CACvD,OAASL,EAAmBG,CAAG,GAAKH,EAAmBI,CAAG,GAAKH,EAAsBE,EAAIC,EAAIC,CAAO,CACrG,CAKAN,EAAO,QAAUG,IClBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isComplex128Array", "hasAlmostEqualValues", "isAlmostEqualComplex128Array", "v1", "v2", "maxULP", "main"]
}
